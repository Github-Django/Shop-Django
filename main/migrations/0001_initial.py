# Generated by Django 4.0.2 on 2022-07-09 17:49

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='برند')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='نام دسته بندی')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='آذرس دسته بندی')),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('available', models.BooleanField(default=False, max_length=1, verbose_name='منتشر شدن دسته بندی')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='main.category', verbose_name='خانواده')),
            ],
            options={
                'verbose_name': 'Categories',
                'verbose_name_plural': 'Category',
                'ordering': ['-create'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='رنگ')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='مشخصه محصول')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='آدرس دهی محصول')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='مشخصات محصول')),
                ('unit_price', models.PositiveIntegerField(verbose_name='قیمت محصول')),
                ('discount', models.PositiveIntegerField(blank=True, null=True, verbose_name='تخفیف برای این محصول')),
                ('quantity', models.PositiveIntegerField(verbose_name='تعداد محصول')),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='product', verbose_name='کاور محصول')),
                ('status', models.CharField(blank=True, choices=[('None', 'none'), ('Size', 'size'), ('Color', 'color'), ('Both', 'both')], max_length=200, null=True, verbose_name='وضعیت محصول')),
                ('available', models.BooleanField(default=False, verbose_name='منشتر شدن در سایت')),
                ('total_favourite', models.IntegerField(default=0)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.brand', verbose_name='برند')),
                ('category', models.ManyToManyField(related_name='products', to='main.Category', verbose_name='دسته بندی')),
                ('color', models.ManyToManyField(blank=True, to='main.Color', verbose_name='رنگ')),
                ('favourite', models.ManyToManyField(blank=True, related_name='fa_user', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(blank=True, related_name='product_like', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='سایز')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='نام محصول')),
                ('unit_price', models.PositiveIntegerField(verbose_name='قیمت محصول')),
                ('discount', models.PositiveIntegerField(blank=True, null=True, verbose_name='تخفیف برای این محصول')),
                ('quantity', models.PositiveIntegerField(verbose_name='تعداد محصول')),
                ('update', models.DateTimeField(auto_now=True)),
                ('color_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.color', verbose_name='رنگ')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('size_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.size', verbose_name='سایز')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.ManyToManyField(blank=True, to='main.Size', verbose_name='سایز'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='محصولات مشابه بر اساس دسته بندی ها'),
        ),
        migrations.AddField(
            model_name='product',
            name='view_count',
            field=models.ManyToManyField(blank=True, related_name='view_count', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, upload_to='post-image', verbose_name='اضافه کردن عکس های بیشتر ')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='Compare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=300, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('is_replay', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('replay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_reply', to='main.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_price', models.IntegerField(default=0)),
                ('update', models.DateTimeField(auto_now=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.variant')),
            ],
        ),
    ]
